■ gccコンパイルオプション
-o
 $ gcc main.cを実行するとa.outというファイル名で作成される
 ここで任意の実行ファイル名にするためには
 $ gcc main.c -o main
 というように-oオプションを使う必要がある

-c
 ビルドは下記の(1)~(3)の順番で行われる
 (1)プリプロセッサ→(2)コンパイル→(3)リンク
 (1):ソースコードに行われる前処理で
     ディレクティブ(# ...)という命令を処理
 (2):中間言語や機械語に翻訳
 (3):オブジェクトファイルやライブラリを連結して実行ファイルを作成
 ここで下記のようなコマンドを行うとmain.oというファイル名が作られる
 $ gcc -c main.c
 オブジェクトファイルから実行ファイルを作成する時は下記のように行う
 $ gcc main.o -o main
 
■ 任意のMakefileを使ってビルドを行う場合
 Makefileとは名を使う場合(※シンボリックリンクは張らない)は
 下記のように指定することでできる
 $ make -f Makefile2
 この例はmakeの場合は1番最初にあるルールが実行されるため
 allが1番最初に記載されているMakefileの場合はmake allと同じになる．
 cleanなど別ルールを実行する時は
 $ make -f Makefile2 clean
 のようにする

■ 擬似ターゲットのルール
 cleanというファイルが存在している場合
 makefileのルールからcleanというターゲットファイルが存在していると
 make clean としてもcleanというターゲットは最新であるエラーが出る
 $ make clean
 make: `clean' is up to date.
 これを防ぐために擬似ターゲットである.PHONY ルールを使う
 この指定が行われたターゲットはルールが必ずコマンドが実行される
 .PHONY: cleanのように記載する
 
